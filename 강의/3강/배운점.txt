1. string.split(separator, limit)

문자열을 separator로 잘라서 limit 크기 이하의 배열에 저장합니다

let a = "Te st"
a.split("")     // [T,e,'',s,t]
a.split(" ")    // [Te,st]

2. join(string)

배열을 string으로 합쳐준다

let b = ['안','녕','하','세','요']
b.join()            // 안,녕,하,세,요
b.join("")          // 안녕하세요
b.join("-")         // 안-녕-하-세-요

3. reverse() - 원본 배열이 변형된다

원본 배열을 거꾸로 뒤집는 함수

let c = ['몰','?','루']
c.reverse()         // ['루','?','몰']
원본 배열 변형 안하는법은 원본 배열을 복사해서 사용한다.
[...c].reverse()

4. replace(규칙,바꿀것)
정규화를 하는 함수이며 규칙을 정한 후 바꿀 것으로 찾은것을 바꿔준다
/ / 로 시작하며
^은 부정을 뜻하고 g는 전체를 뜻한다
d.replace(/[^a-z]/g,'')  // 문자열 d에서 소문자 a-z가 아닌것들을 찾아 빈 문자열로 바꿔준다

5. isNaN() vs Number.isNaN()
두 함수 NaN이 나온다면 true를 반환한다.
isNaN() 은 ()안의 값이 Number() 함수나 parseInt() 함수를 사용했을 때 NaN이 나온다면 true를 반환한다
Number.isNaN() 함수는 ()값이 순수하게 isNaN일때만 true를 반환한다

6. Number() vs pasreInt()
Number()는 number 타입의 값을 반환하고
parseInt()는 정수형 타입의 값을 반환한다
parseInt(value,type) 으로 2개의 인자를 받는데 type은 몇진수의 값으로 반환할지를 적을 수 있다. 
또한 들어온 값 중 숫자만 찾아내서 return 하는 특징이 있다 이 경우 시작이 숫자여야 한다

Number(13a)             // NaN
parseInt(13a)           // 13
parseInt(a13)           // NaN
parseInt(F,16)          // 15

